///////////////////////////////////////////////////////////////////////////
//
// Generated by TestGrid
// Generated on: Apr 28, 2016 at 08:41:07 EDT
//
///////////////////////////////////////////////////////////////////////////
//
// This file corresponds with the following table
//
// int calculatePressure(int s1, int s2, booleanemergStop)
//
// |==============================================================================================================================================|
// |  Row  |  Constraints                                                                                                       |  Results        |
// |==============================================================================================================================================|
// |  1    |  (emergStop = true)                                                                                                |  -1             |
// |-------|--------------------------------------------------------------------------------------------------------------------|-----------------|
// |  2    |  (emergStop = false) & (((s1 - s2) < -5) || ((s1 - s2) > 5))                                                       |  -2             |
// |-------|--------------------------------------------------------------------------------------------------------------------|-----------------|
// |  3    |  (emergStop = false) & (((s1 - s2) >= -5) && ((s1 - s2) <= 5)) & (((s1 + s2) / 2) < 40)                            |  -3             |
// |-------|--------------------------------------------------------------------------------------------------------------------|-----------------|
// |  4    |  (emergStop = false) & (((s1 - s2) >= -5) && ((s1 - s2) <= 5)) & (((s1 + s2) / 2) > 80)                            |  -4             |
// |-------|--------------------------------------------------------------------------------------------------------------------|-----------------|
// |  5    |  (emergStop = false) & (((s1 - s2) >= -5) && ((s1 - s2) <= 5)) & (((s1 + s2) / 2) >= 40 && ((s1 + s2) / 2) <= 80)  |  (s1 + s2) / 2  |
// |==============================================================================================================================================|
//
///////////////////////////////////////////////////////////////////////////


package demotest.complexIntegerPackage;

import org.junit.Assert;
import org.junit.Test;

public class calculatePressureTest {

	PressureDemo TestClass = new PressureDemo();

	// This test corresponds to the requirements in row 1 of the table:
	// (emergStop = true) = -1
	@Test
	public final void calculatePressureTest1() throws Exception {
		Assert.assertEquals(TestClass.calculatePressure(0, 0, true), -1);
	}

	// This test corresponds to the requirements in row 2 of the table:
	// (emergStop = false) & (((s1 - s2) < -5) || ((s1 - s2) > 5)) = -2
	@Test
	public final void calculatePressureTest2() throws Exception {
		Assert.assertEquals(TestClass.calculatePressure(6, 0, false), -2);
	}

	// This test corresponds to the requirements in row 3 of the table:
	// (emergStop = false) & (((s1 - s2) >= -5) && ((s1 - s2) <= 5)) & (((s1 + s2) / 2) < 40) = -3
	@Test
	public final void calculatePressureTest3() throws Exception {
		Assert.assertEquals(TestClass.calculatePressure(0, 0, false), -3);
	}

	// This test corresponds to the requirements in row 4 of the table:
	// (emergStop = false) & (((s1 - s2) >= -5) && ((s1 - s2) <= 5)) & (((s1 + s2) / 2) > 80) = -4
	@Test
	public final void calculatePressureTest4() throws Exception {
		Assert.assertEquals(TestClass.calculatePressure(79, 82, false), -4);
	}

	// This test corresponds to the requirements in row 5 of the table:
	// (emergStop = false) & (((s1 - s2) >= -5) && ((s1 - s2) <= 5)) & (((s1 + s2) / 2) >= 40 && ((s1 + s2) / 2) <= 80) = (s1 + s2) / 2
	@Test
	public final void calculatePressureTest5() throws Exception {
		Assert.assertEquals(TestClass.calculatePressure(38, 42, false), (38 + 42) / 2);
	}

}